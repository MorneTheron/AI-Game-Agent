import java.util.ArrayList;

public class Agent {
	
	private ArrayList<KB> KnowledgeBase ;
	private int cRow = 0 ;
	private int cCol = 0 ;
	private int moveLocation = 0;
	private int goalRow = 0 ;
	private int goalCol = 0 ;
	private ArrayList<moves> StepsTaken ;
	private ArrayList<surroundings> SurroundingMoves ;
	
	public Agent()
	{
		KnowledgeBase = new ArrayList<KB>() ;
		StepsTaken = new ArrayList<moves>() ;
	}
	
	public void UpdateKB(String Percept, int Impact, boolean Allowable)
	{
		int UpdateIndex = searchKB(Percept) ;
		if(UpdateIndex == -1)
		{
			KnowledgeBase.add(new KB(Percept, Impact, true)) ;
		}else
		{
			KnowledgeBase.get(UpdateIndex).setPerceptImpact(Impact);
		}
	}
	
	public void Learn(ArrayList<String> Percepts, int ScoreImpact, boolean MoveAllowed)
	{
		for(int p = 0 ; p < Percepts.size(); p++)
		{
			int KBindex = searchKB(Percepts.get(p)) ;
			KnowledgeBase.get(KBindex).setPerceptImpact(ScoreImpact/Percepts.size());
			KnowledgeBase.get(KBindex).setMoveAllowed(MoveAllowed);
		}	
	}
	
	public void updateSurrounding(int location, ArrayList<String> percepts)
	{
		if(SurroundingMoves.size() < location)
		{
			SurroundingMoves.add(new surroundings(location, percepts,0)) ;
		} else
		{
			SurroundingMoves.get(location).setPercepts(percepts);
			SurroundingMoves.get(location).setHeuristicValue(0);
		}
	}
	
	private int searchKB(String percept)
	{
		for(int i = 0 ; i < KnowledgeBase.size(); i++)
		{
			if(KnowledgeBase.get(i).getPercept().equals(percept))
			{
				return i ;
			}
		}
		return -1;
	}
	
	private void determineHeursitics()
	{
		double HeuristicValue = 0 ;
		for(int h = 1 ; h < 9; h++)
		{
			for(int p = 0; p < SurroundingMoves.get(h).getPercepts().size() ; p++)
			{
				int index = searchKB(SurroundingMoves.get(h).getPercepts().get(p)) ;
				HeuristicValue = HeuristicValue + KnowledgeBase.get(index).getPerceptImpact() ;
			}
			SurroundingMoves.get(h).setHeuristicValue(HeuristicValue);
		}
	}
	
	public void MakeMove()
	{
		
	}
	
	public int DetermineMove(String Percept)
	{
		int KBindex = searchKB(Percept);
		
		if(KBindex == -1)
		{
			return 0 ; // means nothing is known about the percept yet
		}
		return 8 ;
	}

	public ArrayList<KB> getKnowledgeBase() {
		return KnowledgeBase;
	}

	public void setKnowledgeBase(ArrayList<KB> knowledgeBase) {
		KnowledgeBase = knowledgeBase;
	}

	public int getcRow() {
		return cRow;
	}

	public void setcRow(int cRow) {
		this.cRow = cRow;
	}

	public int getcCol() {
		return cCol;
	}

	public void setcCol(int cCol) {
		this.cCol = cCol;
	}

	public int getGoalRow() {
		return goalRow;
	}

	public void setGoalRow(int goalRow) {
		this.goalRow = goalRow;
	}

	public int getGoalCol() {
		return goalCol;
	}

	public void setGoalCol(int goalCol) {
		this.goalCol = goalCol;
	}
}
